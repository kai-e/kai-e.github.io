(|finite_sum_aux|
 (|sum_map_dom_TCC1| 0
  (|sum_map_dom_TCC1-1| |nil| 3887057266 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (D1 FORMAL-NONEMPTY-TYPE-DECL NIL |finite_sum_aux| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|image| CONST-DECL "set[R]" |function_image| NIL))
   NIL
   (|sum_map_dom| SUBTYPE
    "restrict[finite_sum_aux.D1, (finite_sum_aux.X), finite_sum_aux.D2].restrict(finite_sum_aux.g)"
    "[(finite_sum_aux.X) -> (function_image[finite_sum_aux.D1, finite_sum_aux.D2].image(finite_sum_aux.g, finite_sum_aux.X))]")))
 (|sum_map_dom| 0
  (|sum_map_dom-1| |nil| 3886979408
   ("" (INDUCT "X" 1 "finite_set_induction[D1]")
    (("1" (SKOLEM-TYPEPRED)
      (("1" (GROUND)
        (("1" (CASE "image(g!1, emptyset[D1]) = emptyset[D2]")
          (("1" (GRIND) NIL NIL)
           ("2" (HIDE 2)
            (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKOLEM-TYPEPRED)
      (("2" (GROUND)
        (("2" (SKOLEM-TYPEPRED)
          (("2" (INST?)
            (("2" (LEMMA "sum_add" ("x" "e!1" "S" "S!1" "f" "f!1 o g!1"))
              (("2"
                (LEMMA "sum_add"
                 ("x" "g!1(e!1)" "S" "image(g!1, S!1)" "f" "f!1"))
                (("2"
                  (CASE
                      "image(g!1, add(e!1, S!1)) = add(g!1(e!1), image(g!1, S!1))")
                  (("1" (REPLACE -1 * LR)
                    (("1" (REPLACE -2 * LR)
                      (("1" (REPLACE -3 * LR)
                        (("1" (GROUND)
                          (("1" (LIFT-IF)
                            (("1" (EXPAND "injective?")
                              (("1" (EXPAND "image")
                                (("1" (GROUND)
                                  (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                                   ("3" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (DELETE -2 -3 2)
                            (("2" (EXPAND "injective?")
                              (("2" (SKOLEM-TYPEPRED)
                                (("2" (INST -5 "x1!1" "x2!1")
                                  (("1" (GRIND) NIL NIL)
                                   ("2" (EXPAND "add") (("2" (GRIND) NIL NIL))
                                    NIL)
                                   ("3" (EXPAND "add") (("3" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (DELETE -1 -2 -4 2)
                    (("2" (EXPAND "image")
                      (("2" (EXPAND "add")
                        (("2" (EXPAND "member")
                          (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                            (("2" (IFF)
                              (("2" (GROUND)
                                (("1" (SKOLEM-TYPEPRED)
                                  (("1" (EXPAND "add")
                                    (("1" (GROUND) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (GRIND) NIL NIL)
                                 ("3" (SKOSIMP)
                                  (("3" (INST?)
                                    (("3" (EXPAND "add")
                                      (("3" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (GRIND) NIL NIL))
    NIL)
   ((|sum_add| FORMULA-DECL NIL |finite_sets_sum| |finite_sets|)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set[D2]"
     |finite_sum_aux| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set[D1]"
     |finite_sum_aux| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[D1]" |finite_sum_aux|
     NIL)
    (|finite_rest| APPLICATION-JUDGEMENT "finite_set[D1]" |finite_sum_aux| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|rest| CONST-DECL "set" |sets| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|x1!1| SKOLEM-CONST-DECL "(S!1)" |finite_sum_aux| NIL)
    (S!1 SKOLEM-CONST-DECL "finite_set[D1]" |finite_sum_aux| NIL)
    (|e!1| SKOLEM-CONST-DECL "D1" |finite_sum_aux| NIL)
    (|x2!1| SKOLEM-CONST-DECL "(S!1)" |finite_sum_aux| NIL)
    (|x!2| SKOLEM-CONST-DECL "(S!1)" |finite_sum_aux| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[D2]" |finite_sum_aux| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[D1]" |finite_sum_aux| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_set_induction| FORMULA-DECL NIL |finite_sets_inductions|
     |finite_sets|)
    (D1 FORMAL-NONEMPTY-TYPE-DECL NIL |finite_sum_aux| NIL)
    (|finite_image| APPLICATION-JUDGEMENT "finite_set[R]" |function_image_aux|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (D2 FORMAL-NONEMPTY-TYPE-DECL NIL |finite_sum_aux| NIL)
    (|image| CONST-DECL "set[R]" |function_image| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL))
   SHOSTAK))
 (|sum_swap| 0
  (|sum_swap-1| |nil| 3887693488
   ("" (INDUCT "X" 1 :NAME "finite_set_induction_rest[D1]")
    (("1" (USE "sum_const[D2]") (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKOLEM-TYPEPRED)
      (("2" (GROUND)
        (("2" (INDUCT "Y" 2 :NAME "finite_set_induction_rest[D2]")
          (("1" (SKOLEM-TYPEPRED)
            (("1" (USE "sum_const[D1]")
              (("1" (USE "sum_emptyset_rew[D2]")
                (("1" (REPLACE -1 * LR)
                  (("1"
                    (LEMMA "sum_eq_funs"
                     ("S" "SS!1" "f" "LAMBDA x: sum(emptyset[D2], h!1(x))" "g"
                      "LAMBDA x: 0"))
                    (("1" (GROUND)
                      (("1" (REPLACE -1 * LR)
                        (("1" (LEMMA "sum_const[D1]" ("S" "SS!1" "c" "0"))
                          (("1" (REPLACE -1 * LR) (("1" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (SKOSIMP)
                        (("2"
                          (LEMMA "sum_emptyset_rew[D2]"
                           ("S" "emptyset[D2]" "f" "h!1(t!1)"))
                          (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOLEM-TYPEPRED)
            (("2" (GROUND)
              (("2" (SKOSIMP)
                (("2" (INST?)
                  (("2"
                    (LEMMA "sum_rest_rew[D2]"
                     ("S" "SS!2" "f"
                      "LAMBDA y: sum(SS!1, LAMBDA x: h!1(x)(y))"))
                    (("2" (GROUND)
                      (("2" (REPLACE -1 -3 LR)
                        (("2" (DELETE -1)
                          (("2"
                            (BOTH-SIDES "+"
                             "sum(SS!1, LAMBDA x: h!1(x)(choose(SS!2)))" -2)
                            (("2" (GROUND)
                              (("2" (REPLACE -2 * RL)
                                (("2"
                                  (LEMMA "sum_distributive"
                                   ("A" "SS!1" "f"
                                    "LAMBDA x: h!1(x)(choose(SS!2))" "g"
                                    "LAMBDA x: sum(rest(SS!2), h!1(x))"))
                                  (("2" (REPLACE -1 * LR)
                                    (("2" (DELETE -1)
                                      (("2"
                                        (LEMMA "sum_eq_funs"
                                         ("S" "SS!1" "f"
                                          "LAMBDA x: sum(SS!2, h!1(x))" "g"
                                          "LAMBDA (x_1: D1):
             (LAMBDA x: h!1(x)(choose(SS!2)))(x_1) +
              (LAMBDA x: sum(rest(SS!2), h!1(x)))(x_1)"))
                                        (("2" (GROUND)
                                          (("2" (SKOLEM-TYPEPRED)
                                            (("2" (DELETE -3 -5 3)
                                              (("2"
                                                (LEMMA "sum_rest"
                                                 ("S" "SS!2" "f" "h!1(t!1)"))
                                                (("2" (GROUND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|finite_rest| APPLICATION-JUDGEMENT "finite_set[D1]" |finite_sum_aux| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[D2]" |finite_sum_aux| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NIL APPLICATION-JUDGEMENT "nat" |finite_sum_aux| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[D1]" |finite_sum_aux|
     NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|rest| CONST-DECL "set" |sets| NIL)
    (|sum_eq_funs| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|sum_emptyset_rew| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|finite_rest| APPLICATION-JUDGEMENT "finite_set[D2]" |finite_sum_aux| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sum_distributive| FORMULA-DECL NIL |finite_sets_sum| |finite_sets|)
    (|sum_rest| FORMULA-DECL NIL |finite_sets_sum| |finite_sets|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|sum_rest_rew| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|sum_const| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "nat" |finite_sum_aux| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[D1]" |finite_sum_aux| NIL)
    (|finite_set_induction_rest| FORMULA-DECL NIL |finite_sets_inductions|
     |finite_sets|)
    (D1 FORMAL-NONEMPTY-TYPE-DECL NIL |finite_sum_aux| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (D2 FORMAL-NONEMPTY-TYPE-DECL NIL |finite_sum_aux| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK)))
(|finite_sum_aux2|
 (|sum_distributive2| 0
  (|sum_distributive2-1| |nil| 3887666273
   ("" (SKOLEM-TYPEPRED)
    ((""
      (LEMMA "sum_distributive"
       ("A" "A!1" "f" "f!1" "g" "lambda x: (-1) * g!1(x)"))
      (("" (GROUND)
        (("" (REPLACE -1 * RL)
          (("" (LEMMA "sum_mult" ("S" "A!1" "f" "g!1" "c" "-1"))
            (("" (REPLACE -1 * LR) (("" (GROUND) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sum_distributive| FORMULA-DECL NIL |finite_sets_sum| |finite_sets|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sum_mult| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (D FORMAL-NONEMPTY-TYPE-DECL NIL |finite_sum_aux2| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|sum_eq_doms| 0
  (|sum_eq_doms-1| |nil| 3888279568 ("" (GRIND) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (D FORMAL-NONEMPTY-TYPE-DECL NIL |finite_sum_aux2| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL))
   SHOSTAK)))

