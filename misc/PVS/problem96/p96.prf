(|p96|
 (FFS_TCC1 0
  (FFS_TCC1-1 NIL 3888905413 ("" (ASSUMING-TCC) NIL NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|identity?| CONST-DECL "bool" |operator_defs| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL))
   NIL
   (FFS ASSUMING
    "finite_sets@finite_sets_sum[finite_set[finite_set[T]], real, 0, restrict[[numfield, numfield], [real, real], numfield].restrict(number_fields.+)].finite_sets_sum"
    "zero_identity: ASSUMPTION operator_defs[finite_sets_sum.R].identity?(finite_sets_sum.+)(finite_sets_sum.zero)")))
 (FFS_TCC2 0
  (FFS_TCC2-1 NIL 3888905413 ("" (ASSUMING-TCC) NIL NIL)
   ((|associative?| CONST-DECL "bool" |operator_defs| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|commutative?| CONST-DECL "bool" |operator_defs| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL))
   NIL
   (FFS ASSUMING
    "finite_sets@finite_sets_sum[finite_set[finite_set[T]], real, 0, restrict[[numfield, numfield], [real, real], numfield].restrict(number_fields.+)].finite_sets_sum"
    "plus_ac: ASSUMPTION booleans.AND(operator_defs[finite_sets_sum.R].associative?(finite_sets_sum.+), operator_defs[finite_sets_sum.R].commutative?(finite_sets_sum.+))")))
 (|IMP_real_aux_TCC1| 0
  (|IMP_real_aux_TCC1-1| NIL 3888598211
   ("" (LEMMA "finite_universe[T]")
    (("" (LEMMA "powerset_finite2[T]")
      (("" (EXPAND "is_finite_type")
        (("" (INST -1 "fullset[T]")
          (("1" (PROP)
            (("1" (EXPAND "is_finite")
              (("1" (SKOLEM-TYPEPRED)
                (("1" (INST 1 "N!1" "f!1")
                  (("1" (GRIND) NIL NIL)
                   ("2" (SKOLEM-TYPEPRED)
                    (("2" (EXPAND "powerset")
                      (("2" (EXPAND "subset?")
                        (("2" (GROUND)
                          (("1" (INST -3 "x!1")
                            (("1" (PROP)
                              (("1" (GROUND) (("1" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|powerset_finite2| JUDGEMENT-TCC NIL |finite_sets_of_sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|powerset| CONST-DECL "setofsets" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|is_finite_type| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_universe| FORMULA-DECL NIL |p96| NIL))
   NIL
   (|IMP_real_aux| ASSUMING "real_aux[finite_set[T]].real_aux"
    "finite_universe: ASSUMPTION finite_sets[real_aux.D].is_finite_type")))
 (|altcard_TCC1| 0
  (|altcard_TCC1-1| |nil| 3888306494
   ("" (SKOLEM-TYPEPRED)
    (("" (LEMMA "finite_universe")
      (("" (LEMMA "finite_subset[T]")
        ((""
          (INST -1 "fullset[T]" "Intersection[T]
               (extend[setof[T], finite_set[T], bool, FALSE](B!1))")
          (("1" (GROUND)
            (("1" (HIDE 2)
              (("1" (EXPAND "subset?")
                (("1" (SKOLEM-TYPEPRED)
                  (("1" (GROUND)
                    (("1" (EXPAND "member")
                      (("1" (EXPAND "fullset") (("1" (PROPAX) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2)
            (("2" (EXPAND "is_finite_type")
              (("2" (EXPAND "fullset")
                (("2" (EXPAND "is_finite") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_universe| FORMULA-DECL NIL |p96| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |p96| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL)
    (|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |p96|
     NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|is_finite_type| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|altcard| SUBTYPE
    "sets[p96.T].Intersection(extend[setof[T], finite_set[T], bool, booleans.FALSE].extend(p96.B))"
    "finite_set[T]")))
 (|e15_22_1_TCC1| 0
  (|e15_22_1_TCC1-1| |nil| 3888304668
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      (("" (LEMMA "finite_subset[T]")
        (("" (LEMMA "finite_universe")
          ((""
            (INST -2 "fullset[T]"
             "Union[T](extend[setof[T], finite_set[T], bool, FALSE](A!1))")
            (("1" (GROUND) (("1" (HIDE 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)
             ("2" (EXPAND "is_finite_type")
              (("2" (HIDE 3 -4 -3)
                (("2" (EXPAND "is_finite")
                  (("2" (SKOLEM-TYPEPRED)
                    (("2" (INST?)
                      (("2" (INST?)
                        (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |p96| NIL)
    (|finite_universe| FORMULA-DECL NIL |p96| NIL)
    (|is_finite_type| CONST-DECL "bool" |finite_sets| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |p96|
     NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|Union| CONST-DECL "set" |sets| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|finite_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|e15_22_1| SUBTYPE
    "sets[p96.T].Union(extend[setof[T], finite_set[T], bool, booleans.FALSE].extend(p96.A))"
    "finite_set[T]")))
 (|e15_22_1| 0
  (|e15_22_1-1| |nil| 3887087638
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      (("" (LEMMA "M_D_sum")
        (("" (INST -1 "D!1" "Union(A!1)")
          (("" (GROUND)
            (("" (HIDE 3)
              (("" (EXPAND "subset?")
                (("" (SKOLEM-TYPEPRED)
                  (("" (GROUND)
                    (("" (EXPAND "Union")
                      (("" (EXPAND "member")
                        (("" (SKOLEM-TYPEPRED)
                          (("" (EXPAND "extend") (("" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|Union| CONST-DECL "set" |sets| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |p96|
     NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|M_D_sum| FORMULA-DECL NIL |M_D_aux| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|e15_22_2| 0
  (|e15_22_2-1| |nil| 3887403016
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      ((""
        (LEMMA "sum_f_g"
         ("S" "D!1" "f" "M_D(Union(A!1))" "g"
          "LAMBDA x: 1 - product(A!1, LAMBDA a: neg_M_D(a)(x))"))
        (("" (GROUND)
          (("" (HIDE 3)
            (("" (SKOLEM-TYPEPRED)
              (("" (EXPAND "neg_M_D")
                (("" (EXPAND "M_D")
                  (("" (EXPAND "o ")
                    (("" (EXPAND "b2n")
                      (("" (EXPAND "Union")
                        (("" (LIFT-IF)
                          (("" (GROUND)
                            (("1" (SKOLEM-TYPEPRED)
                              (("1" (EXPAND "extend")
                                (("1" (GROUND)
                                  (("1"
                                    (LEMMA
                                     "product_remove[finite_set[T],real,1,*]")
                                    (("1"
                                      (INST -1 "A!1"
                                       "LAMBDA a: IF (NOT)(a(x!1)) THEN 1 ELSE 0 ENDIF"
                                       "a!1")
                                      (("1" (GROUND)
                                        (("1" (EXPAND "member")
                                          (("1" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (CASE "FORALL (a: (A!1)): NOT a(x!1)")
                              (("1" (HIDE 1)
                                (("1" (LEMMA "product_eq_funs[finite_set[T]]")
                                  (("1" (INST?)
                                    (("1" (INST -1 "lambda a: 1")
                                      (("1" (GROUND)
                                        (("1" (REPLACE -1 * LR T)
                                          (("1"
                                            (LEMMA
                                             "product_const[finite_set[T]]")
                                            (("1" (INST?)
                                              (("1" (REPLACE -1 * LR T)
                                                (("1" (LEMMA "expt_1i")
                                                  (("1" (INST?)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (SKOLEM-TYPEPRED)
                                          (("2" (INST? -3)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (SKOLEM-TYPEPRED)
                                (("2" (INST? 1) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (NIL APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|product_nat| APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|b2n| CONST-DECL "nbit" |bit| NIL)
    (|product_eq_funs| FORMULA-DECL NIL |finite_sets_product_real|
     |finite_sets|)
    (|expt_1i| FORMULA-DECL NIL |exponentiation| NIL)
    (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|product_const| FORMULA-DECL NIL |finite_sets_product_real| |finite_sets|)
    (|a!1| SKOLEM-CONST-DECL "(A!1)" |p96| NIL)
    (A!1 SKOLEM-CONST-DECL "finite_set[finite_set[T]]" |p96| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|exp2| DEF-DECL "posnat" |exp2| NIL)
    (|uint8| TYPE-EQ-DECL NIL |integertypes| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[finite_set[T]]" |p96|
     NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|product_remove| FORMULA-DECL NIL |finite_sets_product| |finite_sets|)
    (O CONST-DECL "T3" |function_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|neg_M_D| CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|product| DEF-DECL "R" |finite_sets_product| |finite_sets|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|Union| CONST-DECL "set" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|nbit| TYPE-EQ-DECL NIL |bit| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sum_f_g| FORMULA-DECL NIL |finite_sets_sum| |finite_sets|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|e15_22_3| 0
  (|e15_22_3-1| |nil| 3887402391
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      (("" (LEMMA "e15_16")
        (("" (INST?)
          (("" (EXPAND "n_f")
            (("" (EXPAND "neg_M_D")
              (("" (EXPAND "o ")
                (("" (EXPAND "b2n")
                  (("" (REPLACE -1 * RL T)
                    (("" (LEMMA "product_f_g")
                      (("" (INST?)
                        (("" (GROUND)
                          (("" (SKOLEM-TYPEPRED)
                            (("" (HIDE 3) (("" (GRIND) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|product_nat| APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|powerset_finite| APPLICATION-JUDGEMENT "finite_set[set[T]]"
     |finite_sets_of_sets| NIL)
    (|powerset_finite3| APPLICATION-JUDGEMENT
     "non_empty_finite_set[finite_set[finite_set[T]]]" |p96| NIL)
    (|nonempty_powerset| APPLICATION-JUDGEMENT
     "(nonempty?[set[finite_set[T]]])" |p96| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|nbit| TYPE-EQ-DECL NIL |bit| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|neg_M_D| CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|b2n| CONST-DECL "nbit" |bit| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|product_f_g| FORMULA-DECL NIL |finite_sets_product| |finite_sets|)
    (|product_int| APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|uint8| TYPE-EQ-DECL NIL |integertypes| NIL)
    (|exp2| DEF-DECL "posnat" |exp2| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|n_f| CONST-DECL "real" |real_aux| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|e15_16| FORMULA-DECL NIL |real_aux| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|e15_22_3b| 0
  (|e15_22_3b-1| |nil| 3887416081
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      (("" (LEMMA "intersection_is_product3")
        ((""
          (LEMMA "sum_eq_funs[finite_set[finite_set[T]]]"
           ("S" "powerset(A!1)" "f"
            "LAMBDA B: (-1) ^ (card(B)) * product(B, LAMBDA a: M_D(a)(x!1))"
            "g" "LAMBDA B:
             (-1) ^ (card(B)) *
              M_D(Intersection(extend[setof[T], finite_set[T], bool, FALSE](B)))
                 (x!1)"))
          (("" (GROUND)
            (("" (HIDE 3)
              (("" (SKOLEM-TYPEPRED)
                (("" (INST -2 "t!1" "x!1")
                  (("" (GROUND)
                    (("" (REPLACE -2 * LR T)
                      (("" (EXPAND "restrict") (("" (PROPAX) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|powerset_finite| APPLICATION-JUDGEMENT "finite_set[set[T]]"
     |finite_sets_of_sets| NIL)
    (|powerset_finite3| APPLICATION-JUDGEMENT
     "non_empty_finite_set[finite_set[finite_set[T]]]" |p96| NIL)
    (|nonempty_powerset| APPLICATION-JUDGEMENT
     "(nonempty?[set[finite_set[T]]])" |p96| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (|product_nat| APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sum_eq_funs| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|powerset| CONST-DECL "setofsets" |sets| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|product| DEF-DECL "R" |finite_sets_product| |finite_sets|)
    (< CONST-DECL "bool" |reals| NIL) (|nbit| TYPE-EQ-DECL NIL |bit| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |p96| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|intersection_is_product3| FORMULA-DECL NIL |M_D_aux| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|e15_22_4| 0
  (|e15_22_4-1| |nil| 3887420576
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      ((""
        (LEMMA "sum_distributive2"
         ("A" "D!1" "f" "lambda x: 1" "g" "LAMBDA x:
              FFS.sum(powerset(A!1),
                  LAMBDA B:
                    (-1) ^ (card(B)) *
                     M_D(Intersection(B))(x))"))
        (("" (GROUND)
          (("" (REPLACE -1 * RL)
            (("" (GROUND)
              (("" (USE "sum_const[T]") (("" (GROUND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "posnat" |p96| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|sum_const| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|sum_distributive2| FORMULA-DECL NIL |finite_sum_aux2| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|powerset| CONST-DECL "setofsets" |sets| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|nbit| TYPE-EQ-DECL NIL |bit| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nonempty_powerset| APPLICATION-JUDGEMENT
     "(nonempty?[set[finite_set[T]]])" |p96| NIL)
    (|powerset_finite3| APPLICATION-JUDGEMENT
     "non_empty_finite_set[finite_set[finite_set[T]]]" |p96| NIL)
    (|powerset_finite| APPLICATION-JUDGEMENT "finite_set[set[T]]"
     |finite_sets_of_sets| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|e15_22_5| 0
  (|e15_22_5-1| |nil| 3887670340
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      ((""
        (LEMMA "sum_distributive"
         ("A" "D!1" "f" "LAMBDA (x_1: T):
                FFS.sum(singleton(emptyset),
                    LAMBDA B:
                      (-1) ^ (card(B)) *
                       M_D(Intersection(B))(x_1))"
          "g" "LAMBDA (x_1: T):
                 FFS.sum(remove(emptyset, powerset(A!1)),
                     LAMBDA B:
                       (-1) ^ (card(B)) *
                        M_D(Intersection(B))(x_1))"))
        (("" (REPLACE -1 * LR T)
          (("" (GROUND)
            ((""
              (LEMMA "sum_eq_funs"
               ("S" "D!1" "f"
                "LAMBDA x: FFS.sum(powerset(A!1), LAMBDA B: (-1) ^ (card(B)) * M_D(Intersection(B))(x))"
                "g"
                #<(SIMPLE-ARRAY CHARACTER (316)) LAMBDA (x: T):
                             FFS.sum(singleton(emptyset),
                                 LAMBDA B: (-1) ^ (card(B)) * M_D(Intersection(B))(x))
                           + FFS.sum(rem... {10087EC0BF}>))
              (("" (PROP)
                (("" (HIDE 3)
                  (("" (SKOLEM-TYPEPRED)
                    ((""
                      (LEMMA "sum_remove[finite_set[finite_set[T]],real,0,+]"
                       ("x" "emptyset[finite_set[T]]" "S" "powerset(A!1)" "f"
                        "LAMBDA B:
                (-1) ^ (card(B)) *
                 M_D(Intersection(extend[setof[T], finite_set[T], bool, FALSE]
                                   (B)))
                    (t!1)"))
                      (("" (GROUND)
                        (("" (LIFT-IF)
                          (("" (GROUND)
                            (("1" (REPLACE -2 * RL T)
                              (("1"
                                (CASE
                                    #<(SIMPLE-ARRAY CHARACTER (426)) FFS.sum
           (singleton(emptyset),
            LAMBDA B:
              (-1) ^ (card(B)) *
               M_D(Intersection(extend[setof[T], finite_set[T], bool, FALSE]
                           ... {10086B6E1F}>)
                                (("1" (REPLACE -1 * RL T)
                                  (("1" (GROUND)
                                    (("1"
                                      (LEMMA "sum_eq_doms"
                                       ("A" "{y: finite_set[finite_set[T]] |
             emptyset[finite_set[T]] /= y AND
              member[finite_set[finite_set[T]]](y, powerset(A!1))}"
                                        "B" "{y: set[finite_set[T]] |
              emptyset[finite_set[T]] /= y AND member(y, powerset(A!1))}"
                                        "f" "LAMBDA B:
             (-1) ^ (card(B)) *
              M_D(Intersection(extend[setof[T], finite_set[T], bool, FALSE]
                                   (B)))
                 (t!1)"))
                                      (("1" (GROUND)
                                        (("1" (EXPAND "remove")
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (HIDE 2)
                                          (("2"
                                            (APPLY-EXTENSIONALITY 1 :HIDE? T)
                                            (("1" (GRIND) NIL NIL)
                                             ("2" (HIDE - 2)
                                              (("2" (SKOLEM-TYPEPRED)
                                                (("2" (LEMMA "finite_universe")
                                                  (("2"
                                                    (LEMMA
                                                     "finite_subset[finite_set[T]]")
                                                    (("2"
                                                      (INST -1
                                                       "powerset(fullset[T])"
                                                       "x!1")
                                                      (("1" (GROUND)
                                                        (("1" (HIDE 2)
                                                          (("1"
                                                            (EXPAND "subset?")
                                                            (("1"
                                                              (SKOLEM-TYPEPRED)
                                                              (("1" (GROUND)
                                                                (("1"
                                                                  (EXPAND
                                                                   "member")
                                                                  (("1"
                                                                    (EXPAND
                                                                     "restrict")
                                                                    (("1"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "restrict")
                                                        (("2"
                                                          (LEMMA
                                                           "powerset_finite2[T]")
                                                          (("2"
                                                            (INST -1
                                                             "fullset[T]")
                                                            (("1" (GROUND)
                                                              (("1"
                                                                (HIDE -1 -3 2)
                                                                (("1"
                                                                  (EXPAND
                                                                   "is_finite")
                                                                  (("1"
                                                                    (SKOLEM-TYPEPRED)
                                                                    (("1"
                                                                      (INST?)
                                                                      (("1"
                                                                        (INST?)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "injective?")
                                                                          (("1"
                                                                            (SKOLEM-TYPEPRED)
                                                                            (("1"
                                                                              (INST?)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (SKOLEM-TYPEPRED)
                                                                          (("2"
                                                                            (GROUND)
                                                                            (("2"
                                                                              (LEMMA
                                                                               "powerset_finite2[T]")
                                                                              (("2"
                                                                                (INST?)
                                                                                (("1"
                                                                                  (GROUND)
                                                                                  (("1"
                                                                                    (INST?)
                                                                                    (("1"
                                                                                      (GROUND)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   -
                                                                                   2)
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "finite_universe")
                                                                                    (("2"
                                                                                      (EXPAND*
                                                                                       "is_finite_type"
                                                                                       "is_finite")
                                                                                      (("2"
                                                                                        (SKOLEM-TYPEPRED)
                                                                                        (("2"
                                                                                          (INST?)
                                                                                          (("2"
                                                                                            (INST?)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "injective?")
                                                                                              (("1"
                                                                                                (SKOLEM-TYPEPRED)
                                                                                                (("1"
                                                                                                  (INST?)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (HIDE
                                                                                               -)
                                                                                              (("2"
                                                                                                (GRIND)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (HIDE 2 3)
                                                              (("2"
                                                                (EXPAND*
                                                                 "is_finite_type"
                                                                 "is_finite"
                                                                 "fullset")
                                                                (("2"
                                                                  (SKOLEM-TYPEPRED)
                                                                  (("2" (INST?)
                                                                    (("2"
                                                                      (INST?)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "injective?")
                                                                        (("1"
                                                                          (SKOLEM-TYPEPRED)
                                                                          (("1"
                                                                            (INST?)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2"
                                          (LEMMA
                                           "finite_subset[finite_set[finite_set[T]]]"
                                           ("s" "{y: set[finite_set[T]] |
              emptyset[finite_set[T]] /= y AND
               member[set[finite_set[T]]](y, powerset[finite_set[T]](A!1))}"
                                            "A" "powerset(A!1)"))
                                          (("1" (GROUND)
                                            (("1" (HIDE 2)
                                              (("1" (EXPAND "is_finite")
                                                (("1" (PROPAX) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (HIDE - 2 3)
                                              (("2" (EXPAND "subset?")
                                                (("2" (SKOLEM-TYPEPRED)
                                                  (("2" (EXPAND "member")
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE - 2 3)
                                            (("2" (SKOLEM-TYPEPRED)
                                              (("2" (LEMMA "finite_universe")
                                                (("2"
                                                  (LEMMA
                                                   "finite_subset[finite_set[T]]"
                                                   ("s" "x!1" "A"
                                                    "powerset(fullset[T])"))
                                                  (("1" (GROUND)
                                                    (("1" (EXPAND "subset?")
                                                      (("1" (SKOLEM-TYPEPRED)
                                                        (("1" (EXPAND "member")
                                                          (("1" (GROUND)
                                                            (("1"
                                                              (EXPAND
                                                               "restrict")
                                                              (("1"
                                                                (EXPAND
                                                                 "powerset")
                                                                (("1"
                                                                  (EXPAND
                                                                   "subset?")
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (LEMMA
                                                       "powerset_finite2[T]")
                                                      (("2" (INST?)
                                                        (("1" (GROUND)
                                                          (("1" (HIDE -1 -3)
                                                            (("1"
                                                              (EXPAND
                                                               "is_finite")
                                                              (("1"
                                                                (SKOLEM-TYPEPRED)
                                                                (("1" (INST?)
                                                                  (("1" (INST?)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "injective?")
                                                                      (("1"
                                                                        (SKOLEM-TYPEPRED)
                                                                        (("1"
                                                                          (INST?)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKOLEM-TYPEPRED)
                                                                      (("2"
                                                                        (GROUND)
                                                                        (("1"
                                                                          (REVEAL
                                                                           -2)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "finite_subset"
                                                                             ("s"
                                                                              "x!2"
                                                                              "A"
                                                                              "fullset[T]"))
                                                                            (("1"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (EXPAND
                                                                               "is_finite")
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "is_finite_type")
                                                                                (("2"
                                                                                  (SKOLEM-TYPEPRED)
                                                                                  (("2"
                                                                                    (INST
                                                                                     1
                                                                                     "N!2"
                                                                                     "g!1")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "injective?")
                                                                                      (("2"
                                                                                        (SKOLEM-TYPEPRED)
                                                                                        (("2"
                                                                                          (GROUND)
                                                                                          (("2"
                                                                                            (INST?
                                                                                             -5)
                                                                                            (("2"
                                                                                              (GROUND)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "restrict")
                                                                                                (("2"
                                                                                                  (PROPAX)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("3"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (HIDE - 2 3)
                                        (("3" (LEMMA "finite_universe")
                                          (("3"
                                            (LEMMA
                                             "powerset_finite2[finite_set[T]]"
                                             ("A" "A!1"))
                                            (("3"
                                              (LEMMA
                                               "finite_subset[finite_set[finite_set[T]]]"
                                               ("s"
                                                "{y: finite_set[finite_set[T]] |
              emptyset[finite_set[T]] /= y AND
               member[finite_set[finite_set[T]]]
                   (y, powerset[finite_set[T]](A!1))}"
                                                "A" "powerset(A!1)"))
                                              (("3" (GROUND)
                                                (("1" (GRIND) NIL NIL)
                                                 ("2" (GRIND) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("4" (HIDE - 2 3)
                                        (("4"
                                          (LEMMA
                                           "powerset_finite2[finite_set[T]]")
                                          (("4" (GROUND)
                                            (("4"
                                              (INST -1 "powerset(fullset[T])")
                                              (("1" (GROUND)
                                                (("1" (SKOLEM-TYPEPRED)
                                                  (("1" (INST?)
                                                    (("1" (GROUND)
                                                      (("1" (HIDE 2)
                                                        (("1"
                                                          (EXPAND "powerset")
                                                          (("1"
                                                            (EXPAND "subset?")
                                                            (("1"
                                                              (SKOLEM-TYPEPRED)
                                                              (("1" (GROUND)
                                                                (("1"
                                                                  (EXPAND
                                                                   "member")
                                                                  (("1"
                                                                    (EXPAND
                                                                     "restrict")
                                                                    (("1"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "restrict")
                                                (("2" (HIDE 2)
                                                  (("2"
                                                    (LEMMA
                                                     "powerset_finite2[T]"
                                                     ("A" "fullset[T]"))
                                                    (("1" (GROUND)
                                                      (("1" (HIDE -1)
                                                        (("1"
                                                          (EXPAND "is_finite")
                                                          (("1"
                                                            (SKOLEM-TYPEPRED)
                                                            (("1" (INST?)
                                                              (("1" (INST?)
                                                                (("1"
                                                                  (EXPAND
                                                                   "injective?")
                                                                  (("1"
                                                                    (SKOLEM-TYPEPRED)
                                                                    (("1"
                                                                      (INST?)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (SKOLEM-TYPEPRED)
                                                                  (("2"
                                                                    (GROUND)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "finite_subset[T]")
                                                                      (("2"
                                                                        (INST
                                                                         -1
                                                                         "fullset[T]"
                                                                         "x!1")
                                                                        (("1"
                                                                          (GROUND)
                                                                          (("1"
                                                                            (HIDE
                                                                             -2
                                                                             -3
                                                                             2)
                                                                            (("1"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE
                                                                           -1
                                                                           2)
                                                                          (("2"
                                                                            (EXPAND
                                                                             "is_finite")
                                                                            (("2"
                                                                              (HIDE
                                                                               -)
                                                                              (("2"
                                                                                (LEMMA
                                                                                 "finite_universe")
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "is_finite_type")
                                                                                  (("2"
                                                                                    (SKOSIMP)
                                                                                    (("2"
                                                                                      (INST
                                                                                       1
                                                                                       "N!2"
                                                                                       "g!1")
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "injective?")
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "restrict")
                                                                                          (("2"
                                                                                            (SKOSIMP)
                                                                                            (("2"
                                                                                              (INST?)
                                                                                              (("2"
                                                                                                (GROUND)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE 2)
                                                      (("2"
                                                        (LEMMA
                                                         "finite_universe")
                                                        (("2"
                                                          (EXPAND*
                                                           "is_finite_type"
                                                           "is_finite")
                                                          (("2"
                                                            (SKOLEM-TYPEPRED)
                                                            (("2" (INST?)
                                                              (("2" (INST?)
                                                                (("1"
                                                                  (EXPAND
                                                                   "injective?")
                                                                  (("1"
                                                                    (SKOSIMP)
                                                                    (("1"
                                                                      (INST?)
                                                                      (("1"
                                                                        (GROUND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (HIDE -)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE 2)
                                  (("2" (HIDE -1 -3 -5)
                                    (("2"
                                      (LEMMA
                                       "sum_singleton_rew[finite_set[finite_set[T]]]")
                                      (("2"
                                        (INST -1
                                         "singleton(emptyset[finite_set[T]])"
                                         "LAMBDA B:
            (-1) ^ (card(B)) *
             M_D(Intersection(extend[setof[T], finite_set[T], bool, FALSE]
                                  (B)))
                (t!1)"
                                         "emptyset[finite_set[T]]")
                                        (("2" (GROUND)
                                          (("1" (HIDE - 2 3)
                                            (("1" (REWRITE "card_def")
                                              (("1" (REWRITE "Card_bijection")
                                                (("1"
                                                  (INST 1
                                                   "lambda (y : (singleton(emptyset[finite_set[T]]))) : 0")
                                                  (("1" (EXPAND "bijective?")
                                                    (("1" (GROUND)
                                                      (("1"
                                                        (EXPAND "injective?")
                                                        (("1" (GRIND) NIL NIL))
                                                        NIL)
                                                       ("2"
                                                        (EXPAND "surjective?")
                                                        (("2" (SKOLEM-TYPEPRED)
                                                          (("2"
                                                            (INST 1
                                                             "emptyset[finite_set[T]]")
                                                            (("2" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE - 2)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 2 3 -)
                              (("2" (EXPAND "member")
                                (("2" (EXPAND "powerset")
                                  (("2" (EXPAND "subset?")
                                    (("2" (SKOSIMP)
                                      (("2" (HIDE 1) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (|sum_eq_funs| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[finite_set[T]]" |p96| NIL)
    (|sum_remove| FORMULA-DECL NIL |finite_sets_sum| |finite_sets|)
    (|sum_singleton_rew| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|card_def| FORMULA-DECL NIL |finite_sets| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|Card_bijection| FORMULA-DECL NIL |finite_sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sum_eq_doms| FORMULA-DECL NIL |finite_sum_aux2| NIL)
    (|finite_universe| FORMULA-DECL NIL |p96| NIL)
    (|nonempty_powerset| APPLICATION-JUDGEMENT "(nonempty?[set[T]])" |p96| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |p96|
     NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|powerset_finite2| JUDGEMENT-TCC NIL |finite_sets_of_sets| NIL)
    (|is_finite_type| CONST-DECL "bool" |finite_sets| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|finite_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT
     "(partial_order?[set[finite_set[T]]])" |p96| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |p96|
     NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |p96| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sum_distributive| FORMULA-DECL NIL |finite_sets_sum| |finite_sets|)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|nbit| TYPE-EQ-DECL NIL |bit| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (|powerset| CONST-DECL "setofsets" |sets| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[T]" |p96| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[set[finite_set[T]]]"
     |p96| NIL)
    (|nonempty_powerset| APPLICATION-JUDGEMENT
     "(nonempty?[set[finite_set[T]]])" |p96| NIL)
    (|powerset_finite3| APPLICATION-JUDGEMENT
     "non_empty_finite_set[finite_set[finite_set[T]]]" |p96| NIL)
    (|powerset_finite| APPLICATION-JUDGEMENT "finite_set[set[T]]"
     |finite_sets_of_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT
     "non_empty_finite_set[T]" |p96| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT
     "non_empty_finite_set[set[finite_set[T]]]" |p96| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|e15_22_6a| 0
  (|e15_22_6a-1| |nil| 3887742054
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      (("" (LEMMA "sum_swap[T, finite_set[finite_set[T]]]")
        ((""
          (INST -1 "D!1" "remove(emptyset, powerset(A!1))"
           "lambda x: lambda B: (-1) ^ (card(B)) * M_D(Intersection(B))(x)")
          (("" (REPLACE -1 * LR T)
            ((""
              (LEMMA "sum_eq_funs[finite_set[finite_set[T]]]"
               ("S" "remove(emptyset, powerset(A!1))" "f"
                "LAMBDA (y: finite_set[finite_set[T]]):
            sum(D!1,
                LAMBDA (x_1: T):
                  (-1) ^ (card(y)) *
                   M_D(Intersection(y))
                      (x_1))"
                "g" "LAMBDA B:
             (-1) ^ (card(B)) *
              sum(D!1,
                  LAMBDA x:
                    M_D(Intersection(B))
                       (x))"))
              (("" (GROUND)
                (("" (SKOLEM-TYPEPRED)
                  ((""
                    (LEMMA "sum_mult"
                     ("S" "D!1" "c" "(-1) ^ (card(t!1))" "f" "LAMBDA x:
              M_D(Intersection(t!1))
                 (x)"))
                    (("" (REPLACE -1 * LR T) (("" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[set[finite_set[T]]]"
     |p96| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[T]" |p96| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[finite_set[T]]" |p96| NIL)
    (|powerset_finite| APPLICATION-JUDGEMENT "finite_set[set[T]]"
     |finite_sets_of_sets| NIL)
    (|powerset_finite3| APPLICATION-JUDGEMENT
     "non_empty_finite_set[finite_set[finite_set[T]]]" |p96| NIL)
    (|nonempty_powerset| APPLICATION-JUDGEMENT
     "(nonempty?[set[finite_set[T]]])" |p96| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (NIL APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|powerset| CONST-DECL "setofsets" |sets| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|nbit| TYPE-EQ-DECL NIL |bit| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|sum_eq_funs| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|sum_mult| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|sum_swap| FORMULA-DECL NIL |finite_sum_aux| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|e15_22_6b| 0
  (|e15_22_6b-1| |nil| 3887744118
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      ((""
        (LEMMA "sum_eq_funs"
         ("S" "D!1" "f" "LAMBDA x:
            sum(singleton(emptyset),
                LAMBDA B:
                  (-1) ^ (card(B)) *
                   M_D(Intersection(B))(x))"
          "g" "lambda x: 1"))
        (("" (GROUND)
          (("1" (REPLACE -1 * LR) (("1" (USE "sum_1_is_card[T]") NIL NIL)) NIL)
           ("2" (HIDE 3)
            (("2" (SKOLEM-TYPEPRED)
              (("2" (USE "sum_singleton_rew[finite_set[finite_set[T]]]")
                (("2" (GROUND)
                  (("1" (REPLACE -1 * LR T)
                    (("1" (LEMMA "Intersection_empty_full[finite_set[T]]")
                      (("1" (LEMMA "card_emptyset[finite_set[T]]")
                        (("1" (REPLACE -1 * LR T)
                          (("1" (GROUND)
                            (("1" (LEMMA "expt_x0_aux")
                              (("1" (INST -1 "-1")
                                (("1" (EXPAND "^")
                                  (("1" (REPLACE -1 * LR T)
                                    (("1" (EXPAND "M_D")
                                      (("1" (EXPAND "b2n")
                                        (("1" (EXPAND "o")
                                          (("1" (LIFT-IF)
                                            (("1" (GROUND)
                                              (("1" (EXPAND "full?")
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE - 2 3)
                    (("2" (REWRITE "card_def")
                      (("2" (REWRITE "Card_bijection")
                        (("2" (EXPAND "bijective?")
                          (("2"
                            (INST 1
                             "lambda (y : (singleton(emptyset[finite_set[T]]))) : 0")
                            (("2" (GROUND)
                              (("1" (GRIND) NIL NIL)
                               ("2" (EXPAND "surjective?")
                                (("2" (SKOLEM-TYPEPRED)
                                  (("2" (INST 1 "emptyset[finite_set[T]]")
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "posnat" |p96| NIL)
    (|sum_1_is_card| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|Intersection_empty_full| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|expt_x0_aux| FORMULA-DECL NIL |exponentiation| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|odd_times_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|full?| CONST-DECL "bool" |sets| NIL) (|b2n| CONST-DECL "nbit" |bit| NIL)
    (|nzreal_expt| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (|int_expt| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[finite_set[T]], set[finite_set[T]]])" |p96| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[set[finite_set[T]]]" |p96|
     NIL)
    (|card_emptyset| FORMULA-DECL NIL |finite_sets| NIL)
    (|card_def| FORMULA-DECL NIL |finite_sets| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|Card_bijection| FORMULA-DECL NIL |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[finite_set[T]]" |p96| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|sum_singleton_rew| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|extend| CONST-DECL "R" |extend| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|nbit| TYPE-EQ-DECL NIL |bit| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sum_eq_funs| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT
     "non_empty_finite_set[T]" |p96| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT
     "non_empty_finite_set[set[finite_set[T]]]" |p96| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|e15_22_7| 0
  (|e15_22_7-1| |nil| 3887750800
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      (("" (LEMMA "e15_22_4" ("A" "A!1" "D" "D!1"))
        (("" (GROUND)
          (("" (REPLACE -1 * LR T)
            (("" (LEMMA "e15_22_5" ("A" "A!1" "D" "D!1"))
              (("" (GROUND)
                (("" (REPLACE -1 * LR T)
                  (("" (LEMMA "e15_22_6a" ("A" "A!1" "D" "D!1"))
                    (("" (GROUND)
                      (("" (REPLACE -1 * LR T)
                        (("" (LEMMA "e15_22_6b" ("A" "A!1" "D" "D!1"))
                          (("" (GROUND)
                            (("" (REPLACE -1 * LR T)
                              ((""
                                (LEMMA "sum_eq_funs[finite_set[finite_set[T]]]"
                                 ("S" "remove(emptyset, powerset(A!1))" "f"
                                  "LAMBDA B:
             (-1) ^ (card(B)) *
              sum(D!1,
                  LAMBDA x:
                    M_D(Intersection(B))(x))"
                                  "g" "LAMBDA B:
             (-1) * (-1) ^ (1 + card(B)) *
              sum(D!1,
                  LAMBDA x:
                    M_D(Intersection(B))(x))"))
                                (("" (GROUND)
                                  (("1" (REPLACE -1 * LR T)
                                    (("1"
                                      (LEMMA
                                       "sum_mult[finite_set[finite_set[T]]]"
                                       ("S" "remove(emptyset, powerset(A!1))"
                                        "c" "-1" "f" "LAMBDA B:
             (-1) ^ (1 + card(B)) *
              sum(D!1,
                  LAMBDA x:
                    M_D(Intersection(B))(x))"))
                                      (("1" (REPLACE -1 * LR T)
                                        (("1" (GROUND) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE 3)
                                    (("2" (SKOLEM-TYPEPRED)
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[set[finite_set[T]]]"
     |p96| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[T]" |p96| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[finite_set[T]]" |p96| NIL)
    (|powerset_finite| APPLICATION-JUDGEMENT "finite_set[set[T]]"
     |finite_sets_of_sets| NIL)
    (|powerset_finite3| APPLICATION-JUDGEMENT
     "non_empty_finite_set[finite_set[finite_set[T]]]" |p96| NIL)
    (|nonempty_powerset| APPLICATION-JUDGEMENT
     "(nonempty?[set[finite_set[T]]])" |p96| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (|e15_22_5| FORMULA-DECL NIL |p96| NIL)
    (|e15_22_6b| FORMULA-DECL NIL |p96| NIL)
    (|nzint_times_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sum_mult| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|b2n| CONST-DECL "nbit" |bit| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|rest| CONST-DECL "set" |sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT
     "(partial_order?[set[finite_set[T]]])" |p96| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|finite_rest| APPLICATION-JUDGEMENT "finite_set[T]" |p96| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[T]" |p96| NIL)
    (|int_expt| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_expt| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|sum_eq_funs| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|powerset| CONST-DECL "setofsets" |sets| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (< CONST-DECL "bool" |reals| NIL) (|nbit| TYPE-EQ-DECL NIL |bit| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|e15_22_6a| FORMULA-DECL NIL |p96| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|e15_22_4| FORMULA-DECL NIL |p96| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|inclusion_exclusion| 0
  (|inclusion_exclusion-2| "" 3887757471
   ("" (SKOLEM-TYPEPRED)
    (("" (GROUND)
      (("" (LEMMA "e15_22_1" ("A" "A!1" "D" "D!1"))
        (("" (GROUND)
          (("" (REPLACE -1 * LR T)
            (("" (LEMMA "e15_22_2" ("A" "A!1" "D" "D!1"))
              (("" (GROUND)
                (("" (REPLACE -1 * LR T)
                  ((""
                    (LEMMA "sum_eq_funs"
                     ("S" "D!1" "f"
                      "LAMBDA x: 1 - product(A!1, LAMBDA a: neg_M_D(a)(x))" "g"
                      "LAMBDA x: 1 - FFS.sum(powerset(A!1),
                   LAMBDA B: (-1) ^ (card(B)) * product(B, LAMBDA a: M_D(a)(x)))"))
                    (("" (GROUND)
                      (("1" (REPLACE -1 * LR T)
                        (("1"
                          (LEMMA "sum_eq_funs"
                           ("S" "D!1" "f" "LAMBDA x:
                 1 -
                  FFS.sum(powerset(A!1),
                      LAMBDA B:
                        (-1) ^ (card(B)) * product(B, LAMBDA a: M_D(a)(x)))"
                            "g" "LAMBDA x:
                 1 -
                  FFS.sum(powerset(A!1),
                      LAMBDA B:
                        (-1) ^ (card(B)) * M_D(Intersection(B))(x))"))
                          (("1" (GROUND)
                            (("1" (REPLACE -1 * LR T)
                              (("1" (LEMMA "e15_22_7" ("A" "A!1" "D" "D!1"))
                                (("1" (GROUND)
                                  (("1" (EXPAND "altcard")
                                    (("1" (REPLACE -1 * LR T)
                                      (("1"
                                        (LEMMA
                                         "sum_eq_funs[finite_set[finite_set[T]]]"
                                         ("S" "remove(emptyset, powerset(A!1))"
                                          "f" "LAMBDA B:
            (-1) ^ (1 + card(B)) *
             sum(D!1,
                 LAMBDA x:
                   M_D(Intersection(B))(x))"
                                          "g" "LAMBDA (B) -> int:
             ((-1) ^ (1 + card(B))) * card(Intersection(B))"))
                                        (("1" (GROUND)
                                          (("1" (HIDE 3)
                                            (("1" (SKOLEM-TYPEPRED)
                                              (("1" (HIDE -2 -3)
                                                (("1"
                                                  (CASE-REPLACE
                                                   "sum(D!1, LAMBDA x: M_D(Intersection(t!1))(x)) = card(Intersection(t!1))")
                                                  (("1" (HIDE 2)
                                                    (("1"
                                                      (LEMMA "M_D_sum"
                                                       ("a" "Intersection(t!1)"
                                                        "D" "D!1"))
                                                      (("1" (GROUND)
                                                        (("1"
                                                          (REPLACE -1 * LR T)
                                                          (("1"
                                                            (LEMMA
                                                             "sum_eq_funs"
                                                             ("S" "D!1" "f"
                                                              "LAMBDA x: M_D(Intersection(t!1))(x)"
                                                              "g"
                                                              "M_D(Intersection(t!1))"))
                                                            (("1" (GROUND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE 2)
                                                          (("2"
                                                            (EXPAND "subset?")
                                                            (("2"
                                                              (SKOLEM-TYPEPRED)
                                                              (("2" (GROUND)
                                                                (("2"
                                                                  (EXPAND
                                                                   "Intersection")
                                                                  (("2"
                                                                    (EXPAND
                                                                     "member")
                                                                    (("2"
                                                                      (INST -1
                                                                       "choose(t!1)")
                                                                      (("1"
                                                                        (INST
                                                                         -3
                                                                         "choose(t!1)")
                                                                        (("1"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL)
                                                                       ("3"
                                                                        (EXPAND
                                                                         "remove")
                                                                        (("3"
                                                                          (HIDE
                                                                           -2 2
                                                                           3)
                                                                          (("3"
                                                                            (EXPAND
                                                                             "nonempty?")
                                                                            (("3"
                                                                              (GROUND)
                                                                              (("3"
                                                                                (HIDE
                                                                                 -2)
                                                                                (("3"
                                                                                  (EXPAND
                                                                                   "empty?")
                                                                                  (("3"
                                                                                    (EXPAND
                                                                                     "emptyset")
                                                                                    (("3"
                                                                                      (APPLY-EXTENSIONALITY
                                                                                       1
                                                                                       :HIDE?
                                                                                       T)
                                                                                      (("3"
                                                                                        (GRIND)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE - 2 3)
                                          (("2" (SKOLEM-TYPEPRED)
                                            (("2" (LEMMA "finite_universe")
                                              (("2" (LEMMA "finite_subset[T]")
                                                (("2"
                                                  (INST -1 "fullset[T]"
                                                   "Intersection[T]
               (extend[setof[T], finite_set[T], bool, FALSE](B!1))")
                                                  (("1" (GROUND)
                                                    (("1" (HIDE 2)
                                                      (("1" (EXPAND "subset?")
                                                        (("1" (SKOLEM-TYPEPRED)
                                                          (("1" (PROP)
                                                            (("1" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (EXPAND "is_finite_type")
                                                    (("2"
                                                      (HIDE -2 -3 -4 -5 2 3)
                                                      (("2"
                                                        (EXPAND "is_finite")
                                                        (("2" (SKOLEM-TYPEPRED)
                                                          (("2"
                                                            (INST 1 "N!1"
                                                             "g!1")
                                                            (("2" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 3)
                              (("2" (SKOLEM-TYPEPRED)
                                (("2"
                                  (LEMMA "e15_22_3b"
                                   ("A" "A!1" "D" "D!1" "x" "t!1"))
                                  (("2" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SKOLEM-TYPEPRED)
                        (("2"
                          (LEMMA "e15_22_3" ("A" "A!1" "D" "D!1" "x" "t!1"))
                          (("2" (GROUND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_extend| APPLICATION-JUDGEMENT "finite_set[T]" |extend_set_props|
     NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |sets_lemmas| NIL)
    (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])"
     |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[set[finite_set[T]]]"
     |p96| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set[T]" |p96| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set[finite_set[T]]" |p96| NIL)
    (|powerset_finite| APPLICATION-JUDGEMENT "finite_set[set[T]]"
     |finite_sets_of_sets| NIL)
    (|powerset_finite3| APPLICATION-JUDGEMENT
     "non_empty_finite_set[finite_set[finite_set[T]]]" |p96| NIL)
    (|nonempty_powerset| APPLICATION-JUDGEMENT
     "(nonempty?[set[finite_set[T]]])" |p96| NIL)
    (NIL APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (|e15_22_2| FORMULA-DECL NIL |p96| NIL)
    (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL)
    (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|Intersection| CONST-DECL "set" |sets| NIL)
    (|e15_22_3b| FORMULA-DECL NIL |p96| NIL)
    (|finite_universe| FORMULA-DECL NIL |p96| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|is_finite_type| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|M_D_sum| FORMULA-DECL NIL |M_D_aux| NIL)
    (|t!1| SKOLEM-CONST-DECL "(remove(emptyset, powerset(A!1)))" |p96| NIL)
    (A!1 SKOLEM-CONST-DECL "finite_set[finite_set[T]]" |p96| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT
     "(partial_order?[set[finite_set[T]]])" |p96| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |p96| NIL)
    (|Intersection_surjective| NAME-JUDGEMENT
     "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |p96|
     NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|altcard| CONST-DECL "int" |p96| NIL)
    (|e15_22_7| FORMULA-DECL NIL |p96| NIL)
    (|e15_22_3| FORMULA-DECL NIL |p96| NIL)
    (|sum_eq_funs| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|product| DEF-DECL "R" |finite_sets_product| |finite_sets|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|nbit| TYPE-EQ-DECL NIL |bit| NIL)
    (|neg_M_D| CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|setofsets| TYPE-EQ-DECL NIL |sets| NIL)
    (|powerset| CONST-DECL "setofsets" |sets| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (M_D CONST-DECL "[T -> nbit]" |M_D_aux| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|product_nat| APPLICATION-JUDGEMENT "nat" |p96| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "int" |p96| NIL)
    (|e15_22_1| FORMULA-DECL NIL |p96| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |p96| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK)))

